1. Pobierane są pola:
 a) inputów z reduxa
 b) kategorii
 c) stanu ładowania
2. Przypisane są do obiektów w tablicy (key, value)
3. Z tablicy odfiltrowane są wszystkie obiekty który value='every,
dla każdego który nie ma tej wartości wybierany jest wartość którą posiada.
Taki też string przekazywany jest do 1 z 2 osobnych tablic, ze względu na konieczność osobnych numeracji.
4. Obie tablice są rozbijane i łączone '&', zamieniane w string.
5. String ten jest wywoływany przez Button.
6. funkcja do której został przekazany string robi API request, string jest wklejany do requesta.

PLAN:
1. Każde pole powinno być osobna funkcją wykorzystaną jako hook, który zwraca stanu
2. Wszystkie stany powinny być połączone i przekazane do funckji wywołującej ZAPYTANIE
PROSTE!


---------------------------------------------------------------------------------------------------------------------

W useChoosenFromInput TO JEST ZŁE PODEJŚCIE, NAJLEPIEJ JEST PRZEKAZAĆ WSZYSTKIE STRINGI DO TABLICY I DOPIERO TAM NADAĆ IM NUMERY WG NUMERU INDEXU.
DLACZEGO? WYOBRAŹ SOBIE SYTUACJĘ, ŻE USTAWIASZ WSZYSTKIE PARAMETRY NA LOW, NASTĘPNIE ŚRODKOWY NA HIGH, CO SIĘ STANIE?
ODP: PARAMETRY BĘDĄ MIAŁY WARTOŚCI 0,3,2


-----------------------------------------------------------------------------------------------------------------------

component pobiera dane z reduxa, zmienasz widok ale nie zmiasz reduxa, następnia ponownie wczytujesz widok, pobierane są dane z reduxa
a dopero potem redux jest aktualizowany (prawdopodobnie)