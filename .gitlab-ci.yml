variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

before_script:
  - docker info
  - docker login -u admin -p terefere registry.tradehunter.pl

stages:
  - build
  - test
  #- deploy-test
  - deploy-workers
  - deploy


build-ui:
  stage: build
  retry:
    max: 2
    when: runner_system_failure
  tags:
    - dev-env
  script:
    - pwd
    - cd $CI_PROJECT_DIR
    - cd ./Tradescape.Ui
    - docker build -t tradehunter-ui .
    - docker tag tradehunter-ui registry.tradehunter.pl/tradehunter/ui/${CI_COMMIT_REF_NAME}
    - docker images
    - docker push registry.tradehunter.pl/tradehunter/ui/${CI_COMMIT_REF_NAME}

build-api:
  stage: build
  retry:
    max: 2
    when: runner_system_failure
  tags:
    - dev-env
  script:
    - pwd
    - cd $CI_PROJECT_DIR
    - cd ./api/Tradescape.Api
    - cp ./Dockerfile ../Dockerfile
    - docker build -t tradehunter-api -f ../Dockerfile ..
    - docker tag tradehunter-api registry.tradehunter.pl/tradehunter/api/${CI_COMMIT_REF_NAME}
    - rm ../Dockerfile
    - docker images
    - docker push registry.tradehunter.pl/tradehunter/api/${CI_COMMIT_REF_NAME}

build-alibabaclient:
  stage: build
  retry:
    max: 2
    when: runner_system_failure
  tags:
    - dev-env
  script:
    - pwd
    - cd $CI_PROJECT_DIR
    - cd ./api/Tradescape.AlibabaClient
    - cp ./Dockerfile ../Dockerfile
    - docker build -t tradehunter-alibabaclient -f ../Dockerfile ..
    - docker tag tradehunter-alibabaclient registry.tradehunter.pl/tradehunter/alibabaclient/${CI_COMMIT_REF_NAME}
    - rm ../Dockerfile
    - docker images
    - docker push registry.tradehunter.pl/tradehunter/alibabaclient/${CI_COMMIT_REF_NAME}

build-allegroclient:
  stage: build
  retry:
    max: 2
    when: runner_system_failure
  tags:
    - dev-env
  script:
    - pwd
    - cd $CI_PROJECT_DIR
    - cd ./api/Tradescape.AllegroClient
    - cp ./Dockerfile ../Dockerfile
    - docker build -t tradehunter-allegroclient -f ../Dockerfile ..
    - docker tag tradehunter-allegroclient registry.tradehunter.pl/tradehunter/allegroclient/${CI_COMMIT_REF_NAME}
    - rm ../Dockerfile
    - docker images
    - docker push registry.tradehunter.pl/tradehunter/allegroclient/${CI_COMMIT_REF_NAME}

build-allegroworker:
  stage: build
  retry:
    max: 2
    when: runner_system_failure
  tags:
    - dev-env
  script:
    - pwd
    - cd $CI_PROJECT_DIR
    - cd ./api/Tradescape.AllegroWorker
    - cp ./Dockerfile ../Dockerfile
    - docker build -t tradehunter-allegroworker -f ../Dockerfile ..
    - docker tag tradehunter-allegroworker registry.tradehunter.pl/tradehunter/allegroworker/${CI_COMMIT_REF_NAME}
    - rm ../Dockerfile
    - docker images
    - docker push registry.tradehunter.pl/tradehunter/allegroworker/${CI_COMMIT_REF_NAME}

build-scheduler:
  stage: build
  retry:
    max: 2
    when: runner_system_failure
  tags:
    - dev-env
  script:
    - pwd
    - cd $CI_PROJECT_DIR
    - cd ./api/Tradescape.Scheduler
    - cp ./Dockerfile ../Dockerfile
    - docker build -t tradehunter-scheduler -f ../Dockerfile ..
    - docker tag tradehunter-scheduler registry.tradehunter.pl/tradehunter/scheduler/${CI_COMMIT_REF_NAME}
    - rm ../Dockerfile
    - docker images
    - docker push registry.tradehunter.pl/tradehunter/scheduler/${CI_COMMIT_REF_NAME}

test:
  stage: test
  tags:
    - dev-env
  script:
    - cd ./api/Tradescape.Tests
    - dotnet test

# deploy-test:
#   stage: deploy-test
#   tags:
#     - dev-env
#   script:
#     - docker-compose -f docker-compose.dev.yml pull && docker-compose -f docker-compose.dev.yml up -d
#   needs: [test]
#   only:
#     - develop

deploy-worker-1:
  before_script: []
  after_script: []
  stage: deploy-workers
  tags:
    - worker1
  script:
    - cd ./api/Tradescape.OldApiWorker && dotnet build -o /old-api-worker
    - cd ../../
    - sudo systemctl stop rest-worker.service > /dev/null 2>&1 || true
    - cd ./api/Tradescape.AllegroWorker && dotnet build -o ~/rest-api-worker
    - chmod 777 ./init-worker.sh && ./init-worker.sh
    - cd ~/rest-api-worker
  when: manual

deploy-worker-2:
  before_script: []
  after_script: []
  stage: deploy-workers
  tags:
    - worker2
  script:
    - cd ./api/Tradescape.OldApiWorker && dotnet build -o /old-api-worker
    - cd ../../
    - sudo systemctl stop rest-worker.service > /dev/null 2>&1 || true
    - cd ./api/Tradescape.AllegroWorker && dotnet build -o ~/rest-api-worker
    - chmod 777 ./init-worker.sh && ./init-worker.sh
    - cd ~/rest-api-worker
  when: manual

deploy-worker-3:
  before_script: []
  after_script: []
  stage: deploy-workers
  tags:
    - worker3
  script:
    - cd ./api/Tradescape.OldApiWorker && dotnet build -o /old-api-worker
    - cd ../../
    - sudo systemctl stop rest-worker.service > /dev/null 2>&1 || true
    - cd ./api/Tradescape.AllegroWorker && dotnet build -o ~/rest-api-worker
    - chmod 777 ./init-worker.sh && ./init-worker.sh
    - cd ~/rest-api-worker
  when: manual

deploy-worker-4:
  before_script: []
  after_script: []
  stage: deploy-workers
  tags:
    - worker4
  script:
    - cd ./api/Tradescape.OldApiWorker && dotnet build -o /old-api-worker
    - cd ../../
    - sudo systemctl stop rest-worker.service > /dev/null 2>&1 || true
    - cd ./api/Tradescape.AllegroWorker && dotnet build -o ~/rest-api-worker
    - chmod 777 ./init-worker.sh && ./init-worker.sh
    - cd ~/rest-api-worker
  when: manual

deploy-worker-5:
  before_script: []
  after_script: []
  stage: deploy-workers
  tags:
    - worker5
  script:
    - cd ./api/Tradescape.OldApiWorker && dotnet build -o /old-api-worker
    - cd ../../
    - sudo systemctl stop rest-worker.service > /dev/null 2>&1 || true
    - cd ./api/Tradescape.AllegroWorker && dotnet build -o ~/rest-api-worker
    - chmod 777 ./init-worker.sh && ./init-worker.sh
    - cd ~/rest-api-worker
  when: manual

deploy:
  stage: deploy
  tags:
    - prod-env
  script:
    - docker-compose -f docker-compose.prod.yml pull && docker-compose -f docker-compose.prod.yml up -d
  needs: [test]
  #only:
  #  - master
  when: manual

after_script:
  - docker logout registry.tradehunter.pl