
version: '3.4'

services:
  tradescape.ui:
    image: registry.tradehunter.pl/tradehunter/ui
    ports:
      - "3000:8000"
    #environment:
      #env_file: .production.env
      #NODE_ENV: production

  tradescape.api:
    image: registry.tradehunter.pl/tradehunter/api
    depends_on:
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "3001:80"
      
  tradescape.scheduler:
    image: registry.tradehunter.pl/tradehunter/scheduler
    depends_on:
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "4000:80"
      
  tradescape.allegroworker:
    image: registry.tradehunter.pl/tradehunter/allegroworker
    depends_on:
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    depends_on:
      - rabbitmq

  tradescape.allegroclient:
    image: registry.tradehunter.pl/tradehunter/allegroclient
    depends_on:
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Production

  tradescape.alibabaclient:
    image: registry.tradehunter.pl/tradehunter/alibabaclient
    depends_on:
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Production

  rabbitmq:
    image: "rabbitmq:3-management"
    hostname: "rabbit"
    ports:
      - "15672:15672"
      - "5672:5672"
    labels:
      NAME: "rabbitmq"
    volumes:
      - ./rabbitmq-isolated.conf:/etc/rabbitmq/rabbitmq.config


  mongodb:
    container_name: mongo-dev
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_DATABASE=auth
      - MONGO_INITDB_ROOT_PASSWORD=pass
    ports:
      - '27017:27017'
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - "db-mongo:/data/db"

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    depends_on:
      - mongodb
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pass
      - ME_CONFIG_MONGODB_SERVER=mongo-dev
    ports:
      - '8081:8081'

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    ports:
      - 9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.6.2
    ports:
    - 5601:5601
    depends_on:
    - elasticsearch
    environment:
    - ELASTICSEARCH_URL=http://elasticsearch:9200
  
volumes:
  elasticsearch-data:
  db-mongo:
    driver: local
    